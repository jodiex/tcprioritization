<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" tests="109" skipped="0" failures="0" errors="0" timestamp="2019-07-19T16:55:19" hostname="mo-acceptance-test-driver-182622c" time="67.206">
  <properties/>
  <testcase name="Given I set up the LTI consumer key and shared secret if not already done" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I launch random &quot;basic-lti-launch-request&quot; LTI request with role &quot;Instructor&quot; and outcome URL &quot;&quot; and document target &quot;window&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the LTI Mapping Page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.001"/>
  <testcase name="When I click the 'New Class' mapping button" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on a New Class page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I create new class with random name" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the LTI Mapping Page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the 'Class Homepage' mapping button" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I navigate to the &quot;Content Repository&quot; of current class" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I choose creating new assignment in &quot;Default Unit&quot; unit from the main dropdown button" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then Assignment Editor is opened" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When enter Assignment name &quot;Assignment 1&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click on the questions tab" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click the new question button" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I create question &quot;Regrading&quot; with label &quot;Regrading&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click Response Area button to open the dialog and assert that the Choose Question Type page is visible" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I choose &quot;Maple-graded&quot; link from the dialog" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I change the Maple Graded answer to &quot;x&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the Maple grading code to &quot;with(Threads): Sleep(2); evalb(($ANSWER)-($RESPONSE)=0);&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click OK" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I see the &quot;Maple&quot; Question Widget in the question text section" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I save &amp; close the new question in the assignment editor" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I save &amp; close the assignment on the questions page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I see summary of the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I save and close the assignment summary details" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I go to the LTI Test Harness page and fill in the current class id" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I fill the LTI Test Harness form with random data" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;custom_mapleta_launch_id&quot; drop-down field to &quot;Class home page&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;lis_person_name_family&quot; field to &quot;regrade-student-1&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I launch prepared &quot;basic-lti-launch-request&quot; LTI request with role &quot;Student&quot; and outcome URL &quot;&quot; and document target &quot;window&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I start the &quot;Assignment 1&quot; assignment in &quot;Default Unit&quot; unit" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I enter &quot;5&quot; in Mathematical Formula input" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I submit the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then my score 0 out of 1 (0 %) is shown in a grade report" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And quit and save the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I go to the LTI Test Harness page and fill in the current class id" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I fill the LTI Test Harness form with random data" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;custom_mapleta_launch_id&quot; drop-down field to &quot;Class home page&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I launch prepared &quot;basic-lti-launch-request&quot; LTI request with role &quot;Instructor&quot; and outcome URL &quot;&quot; and document target &quot;window&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.001"/>
  <testcase name="When I navigate to the &quot;Content Repository&quot; of current class" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Content Repository page with the &quot;Current Class&quot; column open" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click &quot;All Lessons &amp; Assignments&quot; in the &quot;Lessons &amp; Assignments&quot; column" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click &quot;Assignment 1&quot; in the &quot;All&quot; column" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I edit the &quot;Assignment 1&quot; assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then Assignment Editor is opened" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click on the questions tab" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I edit the question to have name &quot;Regrading&quot; with label &quot;Regrading&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I save &amp; close the edited question in the assignment editor" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I save &amp; close the assignment on the questions page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I see summary of the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I save and close the assignment summary details" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I go to the LTI Test Harness page and fill in the current class id" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.001"/>
  <testcase name="And I fill the LTI Test Harness form with random data" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;custom_mapleta_launch_id&quot; drop-down field to &quot;Class home page&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;lis_person_name_family&quot; field to &quot;regrade-student-2&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I launch prepared &quot;basic-lti-launch-request&quot; LTI request with role &quot;Student&quot; and outcome URL &quot;&quot; and document target &quot;window&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I start the &quot;Assignment 1&quot; assignment in &quot;Default Unit&quot; unit" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I enter &quot;5&quot; in Mathematical Formula input" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I submit the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then my score 0 out of 1 (0 %) is shown in a grade report" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And quit and save the assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I go to the LTI Test Harness page and fill in the current class id" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I fill the LTI Test Harness form with random data" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I set the &quot;custom_mapleta_launch_id&quot; drop-down field to &quot;Class home page&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I launch prepared &quot;basic-lti-launch-request&quot; LTI request with role &quot;Instructor&quot; and outcome URL &quot;&quot; and document target &quot;window&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I am on the Class Homepage" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I navigate to the &quot;Class Grades&quot; in &quot;Gradebook&quot; of current class" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.001"/>
  <testcase name="Then I am on the Class Grades page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I select &quot;Assignment 1 - Homework/Quiz&quot; in &quot;Assignments&quot; selection list" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click the Search button" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click &quot;Assignment 1&quot; in the Class Grades table" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I click &quot;Q1&quot; for the selected assignment" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see the grade details of question &quot;Regrading&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I click the Regrade Question button for the user with last name &quot;regrade-student-2&quot;" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I am on the Regrading page" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I verify the timestamps are in the correct format" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see entries for 2 revisions" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see entries for 2 attempts" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 1 is highlighted" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see 2 checkboxes to select revisions" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see 2 preview buttons" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the header for revision number 2" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then 2 of the attempts are visible" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 1 has an in progress grade" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.001"/>
  <testcase name="And I see that attempt 2 has an in progress grade" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I see the regrading in progress spinner" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then I wait until regrading is complete" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 1 has a grade of 0.0" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 2 has a grade of 0.0" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 1 is highlighted in yellow" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I see that attempt 2 is highlighted in yellow" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the preview button for revision number 1" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then A question preview window is opened" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I close the preview window" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the preview button for revision number 2" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then A question preview window is opened" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="And I close the preview window" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the header for revision number 2" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then 1 of the attempts are visible" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="When I click the header for revision number 1" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="Then 0 of the attempts are visible" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="0.0"/>
  <testcase name="classMethod" classname="Scenario: Create two revisions of a question, with one attempt at each, and verify regrade page is rendered properly" time="67.318"/>
  <system-out><![CDATA[
  Scenario: Successfully access the Regrading page from test record details page in gradebook                                          ?[90m# gradebook/ManageRegrading.feature:81?[0m
    # Create an assignment:
    ?[32mWhen ?[0m?[32mI launch random "?[0m?[32m?[1mbasic-lti-launch-request?[0m?[32m" LTI request with role "?[0m?[32m?[1mInstructor?[0m?[32m" and outcome URL "?[0m?[32m?[1m?[0m?[32m" and document target "?[0m?[32m?[1mwindow?[0m?[32m"?[0m ?[90m# TestHarnessSteps.runLtiRequest(String,String,String,String)?[0m
    ?[32mThen ?[0m?[32mI am on the LTI Mapping Page?[0m                                                                                                  ?[90m# LTIMappingSteps.assertLtiMappingPage()?[0m
    ?[32mWhen ?[0m?[32mI click the 'New Class' mapping button?[0m                                                                                        ?[90m# LTIMappingSteps.clickNewClassButton()?[0m
    ?[32mThen ?[0m?[32mI am on a New Class page?[0m                                                                                                      ?[90m# AddMapleTAClassSteps.verifyNewClassPage()?[0m
    ?[32mWhen ?[0m?[32mI create new class with random name?[0m                                                                                           ?[90m# AddMapleTAClassSteps.createNewClassWithRandomName()?[0m
    ?[32mThen ?[0m?[32mI am on the LTI Mapping Page?[0m                                                                                                  ?[90m# LTIMappingSteps.assertLtiMappingPage()?[0m
    ?[32mWhen ?[0m?[32mI click the 'Class Homepage' mapping button?[0m                                                                                   ?[90m# LTIMappingSteps.clickClassHomepageButton()?[0m
    ?[32mThen ?[0m?[32mI am on the Class Homepage?[0m                                                                                                    ?[90m# ClassHomepageSteps.assertClassHomepage()?[0m
    # Create an assignment for the students to take
    ?[32mWhen ?[0m?[32mI navigate to the "?[0m?[32m?[1mContent Repository?[0m?[32m" of current class?[0m                                                                       ?[90m# ClassHomepageSteps.navigateInClass(String,String)?[0m
    ?[32mAnd ?[0m?[32mI choose creating new question/Text from the main dropdown button?[0m                                                              ?[90m# ContentRepositorySteps.chooseCreatingNewQuestionFromMainDropdownButton()?[0m
    ?[32mAnd ?[0m?[32mQuestion Designer is opened?[0m                                                                                                    ?[90m# QuestionDesignerSteps.assertQuestionDesignerPageIsOpened()?[0m
    ?[32mWhen ?[0m?[32mI enter valid information for the question name as "?[0m?[32m?[1mRegrading testrecord question?[0m?[32m"?[0m                                            ?[90m# QuestionDesignerSteps.enterQuestionName(String)?[0m
    ?[32mAnd ?[0m?[32mI click inside the question text editor?[0m                                                                                        ?[90m# QuestionDesignerSteps.clickInsideQuestionTextEditor()?[0m
    ?[32mAnd ?[0m?[32mI click Response Area button to open the dialog and assert that the Choose Question Type page is visible?[0m                       ?[90m# QuestionDesignerSteps.clickInsertResponseAreaButton()?[0m
    ?[32mWhen ?[0m?[32mI choose "?[0m?[32m?[1mMathematical Formula?[0m?[32m" link from the dialog and complete the correct answer?[0m                                          ?[90m# QuestionDesignerSteps.chooseTypeAndCompleteCorrectAnswer(String)?[0m
    ?[32mAnd ?[0m?[32mI click OK?[0m                                                                                                                     ?[90m# QuestionDesignerSteps.clickResponseDialogOkButton()?[0m
    ?[32mThen ?[0m?[32mI see the "?[0m?[32m?[1mMathematical Formula?[0m?[32m" Question Widget in the question text section?[0m                                                 ?[90m# QuestionDesignerSteps.assertQuestionWidgetIsInserted(String)?[0m
    ?[32mAnd ?[0m?[32mI click the question designer Save & Close button?[0m                                                                              ?[90m# QuestionDesignerSteps.clickSaveAndCloseButton()?[0m
    ?[32mWhen ?[0m?[32mI choose creating new assignment in "?[0m?[32m?[1mDefault Unit?[0m?[32m" unit from the main dropdown button?[0m                                         ?[90m# ContentRepositorySteps.chooseCreatingNewAssignmentFromMainDropdownButton(String)?[0m
    ?[32mThen ?[0m?[32mAssignment Editor is opened?[0m                                                                                                   ?[90m# AssignmentEditorDetailsSteps.assertAssignmentEditorPageIsOpened()?[0m
    ?[32mWhen ?[0m?[32menter Assignment name "?[0m?[32m?[1mRegrading testrecord assignment?[0m?[32m"?[0m                                                                       ?[90m# AssignmentEditorDetailsSteps.enterAssignmentName(String)?[0m
    ?[32mAnd ?[0m?[32mI click on the questions tab?[0m                                                                                                   ?[90m# AssignmentEditorDetailsSteps.clickQuestionsTab()?[0m
    ?[32mAnd ?[0m?[32mI click the import question button?[0m                                                                                             ?[90m# AssignmentEditorQuestionSteps.importQuestion()?[0m
    ?[32mThen ?[0m?[32mThe import questions dialog appears?[0m                                                                                           ?[90m# AssignmentEditorQuestionSteps.assertImportQuestionsVisible()?[0m
    ?[32mWhen ?[0m?[32mI click on "Questions"?[0m                                                                                                        ?[90m# ContentRepositorySteps.clickOnQuestions()?[0m
    ?[32mAnd ?[0m?[32mI select the question "?[0m?[32m?[1mRegrading testrecord question?[0m?[32m"?[0m                                                                          ?[90m# AssignmentEditorQuestionSteps.selectQuestion(String)?[0m
    ?[32mAnd ?[0m?[32mI click Import Questions in the Import Questions dialog?[0m                                                                        ?[90m# AssignmentEditorQuestionSteps.doImportQuestions()?[0m
    ?[32mThen ?[0m?[32mverify the question caption text is "?[0m?[32m?[1mRegrading testrecord question?[0m?[32m"?[0m                                                           ?[90m# AssignmentEditorQuestionSteps.assertSavedQuestionName(String)?[0m
    ?[32mWhen ?[0m?[32mI save & close the assignment on the questions page?[0m                                                                           ?[90m# AssignmentEditorQuestionSteps.saveAndCloseAssignment()?[0m
    ?[32mThen ?[0m?[32mI see summary of the assignment?[0m                                                                                               ?[90m# AssignmentEditorDetailsSteps.assertAssignmentSummaryShown()?[0m
    ?[32mWhen ?[0m?[32mI save and close the assignment summary details?[0m                                                                               ?[90m# AssignmentEditorDetailsSteps.saveAndCloseAssignmentSummary()?[0m
    # Take the assignment:
    ?[32mThen ?[0m?[32mI am on the Class Homepage?[0m                                                                                                    ?[90m# ClassHomepageSteps.assertClassHomepage()?[0m
    ?[32mAnd ?[0m?[32mI start the "?[0m?[32m?[1mRegrading testrecord assignment?[0m?[32m" assignment in "?[0m?[32m?[1mDefault Unit?[0m?[32m" unit?[0m                                                ?[90m# ClassHomepageSteps.openAssignment(String,String)?[0m
    ?[32mAnd ?[0m?[32mI submit the assignment?[0m                                                                                                        ?[90m# MapleTAAssignmentSteps.submitAssignment()?[0m
    ?[32mThen ?[0m?[32mI confirm to submit the assignment?[0m                                                                                            ?[90m# MapleTAAssignmentSteps.submitAssignment()?[0m
    ?[32mAnd ?[0m?[32mquit and save the assignment?[0m                                                                                                   ?[90m# MapleTAAssignmentSteps.quitAndSaveAssignment()?[0m
    # Load assignment in gradebook:
    ?[32mWhen ?[0m?[32mI am on the Class Homepage?[0m                                                                                                    ?[90m# ClassHomepageSteps.assertClassHomepage()?[0m
    ?[32mThen ?[0m?[32mI navigate to the "?[0m?[32m?[1mClass Grades?[0m?[32m" in "?[0m?[32m?[1mGradebook?[0m?[32m" of current class?[0m                                                              ?[90m# ClassHomepageSteps.navigateInClass(String,String)?[0m
    ?[32mWhen ?[0m?[32mI am on the Class Grades page?[0m                                                                                                 ?[90m# GradebookClassGradesSteps.waitForClassGradesPage()?[0m
    ?[32mThen ?[0m?[32mI select "?[0m?[32m?[1mRegrading testrecord assignment - Homework/Quiz?[0m?[32m" in "Assignments" selection list?[0m                                    ?[90m# GradebookClassGradesSteps.selectAssignment(String)?[0m
    ?[32mAnd ?[0m?[32mI select "?[0m?[32m?[1mOther users with grades?[0m?[32m" in "List" selection list?[0m                                                                    ?[90m# GradebookClassGradesSteps.selectUser(String)?[0m
    ?[32mAnd ?[0m?[32mI select "?[0m?[32m?[1mMost Recent?[0m?[32m" in "Results" selection list?[0m                                                                             ?[90m# GradebookClassGradesSteps.selectResult(String)?[0m
    ?[32mAnd ?[0m?[32mI select "?[0m?[32m?[1mCompleted?[0m?[32m" in "Progress" selection list?[0m                                                                              ?[90m# GradebookClassGradesSteps.selectProgress(String)?[0m
    ?[32mThen ?[0m?[32mI click the Search button?[0m                                                                                                     ?[90m# GradebookClassGradesSteps.clickSearch()?[0m
    # Navigate to the details of a user's assignment attempt:
    ?[32mWhen ?[0m?[32mI click the grade for the selected assignment?[0m                                                                                 ?[90m# GradebookClassGradesSteps.clickGrade()?[0m
    ?[32mThen ?[0m?[32mI see the test record details of "?[0m?[32m?[1mRegrading testrecord assignment?[0m?[32m" for the current user?[0m                                       ?[90m# GradebookDetailsSteps.assertAssignmentTitleAndCurrentUserVisible(String)?[0m
    # Access the Regrading page:
    ?[32mThen ?[0m?[32mI click the Regrade Question button?[0m                                                                                           ?[90m# GradebookDetailsSteps.clickRegradeQuestionButton()?[0m
    ?[32mThen ?[0m?[32mI am on the Regrading page?[0m                                                                                                    ?[90m# GradebookRegradingSteps.waitForRegradingPage()?[0m
    ?[32mAnd ?[0m?[32mI verify the timestamps are in the correct format?[0m                                                                              ?[90m# GradebookRegradingSteps.assertTimestampFormat()?[0m
    ?[32mAnd ?[0m?[32mI see the regrading in progress spinner?[0m                                                                                        ?[90m# GradebookRegradingSteps.assertSpinnerIsVisible()?[0m
    ?[32mAnd ?[0m?[32mI wait until regrading is complete?[0m                                                                                             ?[90m# GradebookRegradingSteps.waitUntilRegradingComplete()?[0m
    ?[32mWhen ?[0m?[32mI select revision number ?[0m?[32m?[1m1?[0m                                                                                                    ?[90m# GradebookRegradingSteps.clickRevisionCheckbox(int)?[0m
    ?[32mAnd ?[0m?[32mI submit all selected grades?[0m                                                                                                   ?[90m# GradebookRegradingSteps.submitSelectedGrades()?[0m
    ?[32mThen ?[0m?[32mI see the test record details of "?[0m?[32m?[1mRegrading testrecord assignment?[0m?[32m" for the current user?[0m                                       ?[90m# GradebookDetailsSteps.assertAssignmentTitleAndCurrentUserVisible(String)?[0m
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
